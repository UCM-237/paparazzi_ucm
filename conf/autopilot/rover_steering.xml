<!DOCTYPE autopilot SYSTEM "autopilot.dtd">

<autopilot name="Steering Rover Autopilot">

  <state_machine name="ap" freq="PERIODIC_FREQUENCY" gcs_mode="true" settings_mode="true">

    <includes>
      <include name="generated/airframe.h"/>
      <include name="autopilot.h"/>
      <include name="autopilot_rc_helpers.h"/>
      <include name="modules/gps/gps.h"/>
      <include name="modules/actuators/actuators.h"/>
      <include name="navigation.h"/>
      <include name="guidance/rover_guidance_steering.h"/>
      <include name="modules/radio_control/radio_control.h"/>
      <define  name="RCLost()" value="(radio_control.status == RC_REALLY_LOST)"/>
    </includes>

    <settings>
      <dl_setting var="autopilot.kill_throttle" min="0" step="1" max="1" module="autopilot" values="Resurrect|Kill" handler="KillThrottle"/>
    </settings>

    <exceptions>
      <exception cond="nav.too_far_from_home" deroute="HOME"/>
      <exception cond="kill_switch_is_on()"   deroute="KILL"/>
    </exceptions>

    <!-- * AP MODES * ......................................................................... -->
    <!-- RC Manual -->
    <mode name="DIRECT" shortname="MANUAL">
      <select cond="RCMode0()"/>
<<<<<<< HEAD
      <control freq="NAVIGATION_FREQUENCY"> <!-- Only for display -->
=======
      <control freq="NAV_FREQ"> <!-- Only for display -->
>>>>>>> 3a718179a85cbeeb5e7761b3eeee5b8d79ab6ddf
        <call fun="nav_periodic_task()"/>
      </control>
      <control>
        <call fun="SetCommandsFromRC(commands, radio_control.values)"/>
        <call fun="SetActuatorsFromCommands(commands, autopilot_get_mode())"/>

        <call fun="rover_guidance_steering_periodic()"/> <!-- Just for Steering Rover telemetry-->
        <call fun="SetAPThrottleFromCommands(commands[COMMAND_THROTTLE])"/>
      </control>
      <exception cond="RCLost()" deroute="KILL"/>
    </mode>

    <!-- RC Assisted (High level cmds) -->
    <!-- RC commands the throttle but GVF controls the steering (flight plan) -->
    <mode name="ASSISTED">
      <select cond="RCMode1()"/>
<<<<<<< HEAD
      <control freq="NAVIGATION_FREQUENCY">
=======
      <control freq="NAV_FREQ">
>>>>>>> 3a718179a85cbeeb5e7761b3eeee5b8d79ab6ddf
        <call fun="nav_periodic_task()"/>
      </control>
      <control>
        <call fun="SetCommandsFromRC(commands, radio_control.values)"/>
        
        <call fun="rover_guidance_steering_periodic()"/>

        <call fun="commands[COMMAND_THROTTLE] = GetCmdFromThrottle(guidance_control.throttle);"/>
        <call fun="SetActuatorsFromCommands(commands, autopilot_get_mode())"/>

        <call fun="SetAPThrottleFromCommands()"/>
      </control>
      <exception cond="RCLost()" deroute="KILL"/>
    </mode>
    
    <!-- Navigation (we have to work in this state because NAV is not yet implemented) -->
    <mode name="NAV">
      <select cond="RCMode2()" exception="HOME"/>
<<<<<<< HEAD
      <control freq="NAVIGATION_FREQUENCY">
=======
      <control freq="NAV_FREQ">
>>>>>>> 3a718179a85cbeeb5e7761b3eeee5b8d79ab6ddf
        <call fun="nav_periodic_task()"/>
      </control>
      <control>
        <call fun="rover_guidance_steering_periodic()"/>

        <call fun="commands[COMMAND_STEERING] = GetCmdFromDelta(guidance_control.cmd.delta);"/>
        <call fun="commands[COMMAND_THROTTLE] = GetCmdFromThrottle(guidance_control.throttle);"/>
        <call fun="SetActuatorsFromCommands(commands, autopilot_get_mode())"/>

        <call fun="SetAPThrottleFromCommands()"/>
      </control>
      <exception cond="GpsIsLost() && autopilot_in_flight()" deroute="KILL"/>
    </mode>
    
    <!-- Come home (not yet implemented because we don't have NAV) -->
    <mode name="HOME">
<<<<<<< HEAD
      <control freq="NAVIGATION_FREQUENCY">
=======
      <control freq="NAV_FREQ">
>>>>>>> 3a718179a85cbeeb5e7761b3eeee5b8d79ab6ddf
        <call fun="nav_home()"/>
      </control>
      <control>
        <call fun="SetActuatorsFromCommands(commands, autopilot_get_mode())"/>
        
        <call fun="rover_guidance_steering_periodic()"/>
        <call fun="SetAPThrottleFromCommands()"/>
      </control>
      <exception cond="GpsIsLost()" deroute="KILL"/>
    </mode>

    <!-- Kill throttle -->
    <mode name="KILL">
      <select cond="$DEFAULT_MODE"/>
      <select cond="kill_switch_is_on()"/>
      <on_enter>
        <call fun="autopilot_set_in_flight(false)"/>
        <call fun="autopilot_set_motors_on(false)"/>
      </on_enter>
      <control>
        <call fun="SetCommands(commands_failsafe)"/>
        <call fun="SetAPThrottleFromCommands()"/>
      </control>
    </mode>

  </state_machine>

</autopilot>
